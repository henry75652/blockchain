import random

class calculate():
    def __init__(self,list_pos_trust = [100,100,100,100]):
        self.list_pos_trust = list_pos_trust
        #self.node = Node()
        
    def get_pos(self):
        pos_num = list()
        for i in range(len(self.list_pos_trust)):
            pos_num.append(self.list_pos_trust[i])
        return pos_num
    
    def calculate_num(self,NODE ,AES ,ECC ,MINE ,DEDICATE ,port):
        if NODE == False:
            self.list_pos_trust[port % 5000] -= 26
        elif AES == False:
            self.list_pos_trust[port % 5000] -= 16
        elif AES == "True":
            self.list_pos_trust[port % 5000] += 1
            """
            block_test = Block().information.pos_trust[port % 5000] / 1.5
            print("[test_aes]",block_test)
            """
        elif ECC == False:
            self.list_pos_trust[port % 5000] -=18
        elif ECC == "True":
            self.list_pos_trust[port % 5000] += 1
        #print("loc_port",port)
        #print("loc_port_5000",port % 5000)
        #elif ECC == False:
            #self.list_pos_trust[port % 5000] +=5
        elif MINE == True:
            self.list_pos_trust[port % 5000] += 9
            #print("[test_pos.py]")
        elif DEDICATE == True:
            self.list_pos_trust[port % 5000] += 2
            
        print("[PoS.py]loc_pos",self.list_pos_trust)
        return self
    """
    def POS(self,block):
        List = [block.number_1, block.number_2, block.number_3, block.number_4]
        mine_node = random.choices(List, weights=(block.PoS_num_1, block.PoS_num_2, block.PoS_num_3 , block.PoS_num_4), k=4)
        return mine_node
    """
    
if __name__ == "__main__":
    
    stop = 1
    from Crypto.Util.number import long_to_bytes, bytes_to_long  
    
    print(long_to_bytes(126943972912743))
    print(bytes_to_long(b'flag{becanyoufriendmy} is password not true flag flag{becanyoufriendmy} is password not true flag'))
    
    n = (2**79) * (86312646216567629137 ** 6) * (357686312646216567629137 ** 7)
    #n = 187211489410878195612060591041991547325821215222329530391567635916686273611423718752507306104937784878771098395307850568520995806524681462849481380608458611137569053052110578012740677464051374396982823003362844751461103676849077532824354897366121031383717311168874184676566667835114829892990519270396013838336
    print("n",n)
    
    #n_1 = (2**63) * (690712633549859897233**6) * (651132262883189171676209466993073**5)
    #print("n_1",n_1)
    
    y = 159014121446773047479142424306904375802956512887779711258903642367481196988500520640338973384382860191051148805708047880079341865551254593654817080293855212944558708876478988591479351503663219530320886613785004937664411498725910536551
    print("y",y)
    x = 668264185684870771814253969847439054641838472347007246683388463694730650738034236238648870370281267332736737938697025227896368293908050246850645288426053494912096733853206898330706136368698753940821664424971895036532207864306766680284572093911175830902634323977955553651771829275456163
    print("x",x)
    a = 73939
    # b = 52049987809489180373434410501602273025105689876513068240468967817915690200986956518642684144757396069985034630707105735812515571980009888526910828663747107716441973815106126671175778314048984426735828835557585484234016392567740662764135817279894572065458502349702073112181673700978187445208823024153416025274238691166577375020344845604247397516094179872357603098734150839368080228012361254947358274412619078384002444442965508803266477087215584838675008746664933850887684917569218281441034732348258549606132603482803059469297926951907671784783032936402385575761392347352767918912343763585812974393292908412521298492691875702674035984095687737110051169921181094739479835229890032535595649232937880088451517110295707692013302978548228028356850798929417781851547014938369668798645715912428207345091551378049361532037007663869123564175958352136532207274016797
    #print("test",(x ** 3) + (a * x) - (y ** 2))
    #print("test_n",n ** 4)
    
    b = (n ** 2) * (10 ** 238) - ( (x ** 3) + (a * x) - (y ** 2))
    print("b",b)

